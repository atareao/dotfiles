    "ibhagwan/fzf-lua",
    -- diffview
    {
        "sindrets/diffview.nvim",
        event = "VeryLazy",
        config = function()
            require("config.diffview")
        end,
        dependencies = "nvim-lua/plenary.nvim"
    },
    -- documentation
    {
        "danymat/neogen",
        dependencies = "nvim-treesitter/nvim-treesitter",
        config = function()
            require("config.neogen")
        end,
        -- Uncomment next line if you want to follow only stable versions
        -- tag = "*"
    },
    {
        "folke/todo-comments.nvim",
        event = "VeryLazy",
        dependencies = { "nvim-lua/plenary.nvim" },
        config = function()
            require("config.todo-comments")
        end,
    },
    -- autosave
    {
        "Pocco81/auto-save.nvim",
        config = function()
            require("config.autosave")
        end
    },
    -- terminal
    {
        "akinsho/toggleterm.nvim",
        event = "VeryLazy",
        version = "*",
        config = true
    },
    -- rest
    {
        "NTBBloodbath/rest.nvim",
        event = "VeryLazy",
        config = function()
            require("config.rest")
        end,
        dependencies = "nvim-lua/plenary.nvim",
    },
    -- just
    "NoahTheDuke/vim-just",
    {
        "IndianBoy42/tree-sitter-just",
        config = function()
            require("tree-sitter-just").setup({})
        end
    },
    -- Whichkey
    {
        "folke/which-key.nvim",
        event = "VeryLazy",
        init = function()
            vim.o.timeout = true
            vim.o.timeoutlen = 300
        end,
        config = function()
            require("config.whichkey")
        end
    },

    -- rust
    {
        "simrat39/rust-tools.nvim",
        config = function()
            require("config.rust-tools")
        end,
    },
    {
        "mfussenegger/nvim-dap",
        config = function()
            require("config.dbg.init")
        end
    },
    "mfussenegger/nvim-dap-python",
    "rcarriga/nvim-dap-ui",
    {
        "theHamsta/nvim-dap-virtual-text",
        config = function()
          require("nvim-dap-virtual-text").setup({
            enabled = true, -- enable this plugin (the default)
            enabled_commands = true, -- create commands DapVirtualTextEnable, DapVirtualTextDisable, DapVirtualTextToggle, (DapVirtualTextForceRefresh for refreshing when debug adapter did not notify its termination)
            highlight_changed_variables = true, -- highlight changed values with NvimDapVirtualTextChanged, else always NvimDapVirtualText
            highlight_new_as_changed = false, -- highlight new variables in the same way as changed variables (if highlight_changed_variables)
            show_stop_reason = true, -- show stop reason when stopped for exceptions
            commented = true, -- prefix virtual text with comment string
            only_first_definition = true, -- only show virtual text at first definition (if there are multiple)
            all_references = false, -- show virtual text on all all references of the variable (not only definitions)
            filter_references_pattern = "<module", -- filter references (not definitions) pattern when all_references is activated (Lua gmatch pattern, default filters out Python modules)
            -- experimental features:
            virt_text_pos = "eol", -- position of virtual text, see `:h nvim_buf_set_extmark()`
            all_frames = false, -- show virtual text for all stack frames not only current. Only works for debugpy on my machine.
            virt_lines = false, -- show virtual lines instead of virtual text (will flicker!)
            virt_text_win_col = nil -- position the virtual text at a fixed window column (starting from the first text column) ,
            -- e.g. 80 to position at column 80, see `:h nvim_buf_set_extmark()`
          })
        end
    },
    {
    "nvim-neotest/neotest",
        dependencies = {
            "nvim-lua/plenary.nvim",
            "nvim-treesitter/nvim-treesitter",
            "antoinemadec/FixCursorHold.nvim",
            "nvim-neotest/neotest-plenary",
            "nvim-neotest/neotest-python",
            "nvim-neotest/neotest-vim-test"
        },
        config = function()
            require("config.nvim-neotest")
        end
    },
    {
        "https://git.sr.ht/~soywod/himalaya-vim",
    },
    {
        "cshuaimin/ssr.nvim",
        config = function()
            require("config.ssr")
        end,
    },
    -- Notification
    --{
    --    "rcarriga/nvim-notify",
    --    config = function()
    --        vim.notify = require("notify")
    --    end,
    --},
    -- emoji
    {
        "kylechui/nvim-surround",
        config = function()
            require("nvim-surround").setup({})
        end,
    },
    "stevearc/dressing.nvim",
    {
        "ziontee113/icon-picker.nvim",
        config = function()
            require("icon-picker").setup({
                disable_legacy_commands = true
            })
        end,
    },
    {
        "folke/noice.nvim",
        config = function()
            require("noice").setup({
                notify = {
                    view = "mini"
                },
                messages = {
                    view = "mini"
                },
                errors = {
                    view = "mini"
                }
            })
        end,
        dependencies = {
             "MunifTanjim/nui.nvim",
            "rcarriga/nvim-notify",
        },
    },
    {
        "rcarriga/nvim-notify",
        config = function()
            require("notify").setup({
                background_colour = "#000000"
            })
        end
    },
    {
        "BlackLight/nvim-http"
    },
    {
        "ojroques/nvim-bufdel"
    },
    --{
    --    "jackMort/ChatGPT.nvim",
    --    event = "VeryLazy",
    --    config = function()
    --        require("config.chatgpt")
    --    end,
    --    dependencies = {
    --        "MunifTanjim/nui.nvim",
    --        "nvim-lua/plenary.nvim",
    --        "nvim-telescope/telescope.nvim"
    --    }
    --},
    {
        'akinsho/flutter-tools.nvim',
        lazy = false,
        dependencies = {
            'nvim-lua/plenary.nvim',
            'stevearc/dressing.nvim', -- optional for vim.ui.select
        },
        config = true,
    },
    {
        "ellisonleao/glow.nvim",
        lazy = false,
        config = true,
        cmd = "Glow"
    }
}
