(defvar workspace "1")
(defvar calendarvisible "false")

(defpoll time_poll :interval "1s" "date +%H:%M")
(defpoll date_poll :interval "1m" "date +%d-%m-%y")
(defpoll sink_volume :interval "1s" "scripts/get_sink_volume.sh")
(defpoll source_volume :interval "1s" "scripts/get_source_volume.sh")

(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
    (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
        (metric :label "üéôÔ∏è"
                :value source_volume
                :onchange "pactl -- set-source-volume @DEFAULT_SOURCE@ {}%")
        (metric :label "üîä"
                :value sink_volume
                :onchange "pactl -- set-sink-volume @DEFAULT_SINK@ {}%")
        (metric :label "Ô°ö"
                :value {EWW_RAM.used_mem_perc}
                :onchange "")
        (metric :label "üíæ"
                :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
                :onchange "")
        (datetime :label "üóìÔ∏è"
                  :value date_poll)
        (datetime :label "‚è∞"
                  :value time_poll)
    )
)

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :class {workspace == "1" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 1" 1)
    (button :class {workspace == "2" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 2" 2)
    (button :class {workspace == "3" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 3" 3)
    (button :class {workspace == "4" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 4" 4)
    (button :class {workspace == "5" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 5" 5)
    (button :class {workspace == "6" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 6" 6)
    (button :class {workspace == "7" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 7" 7)
    (button :class {workspace == "8" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 8" 8)
    (button :class {workspace == "9" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 9" 9)
    (button :class {workspace == "0" ? "active" : "inactive"}
            :onclick "python ~/.config/sway/scripts/change-to-workspace.py 0" 0)
    )
  )

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ${music}" : ""}))


(defwidget datetime [label value]
    (box :orientation "h"
         :class "metric"
         :space-evenly false
        (box :class "label" label)
        (box :class "label" value)
    )
)

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")


(defwindow bar
  :monitor 1
  :stacing "overlay"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "5px")
  (bar))



(defwidget cal []
    (box :class "cal-box"
         :orientation "v"
        (box :class "cal-inner-box"
            (calendar :timeout 5)
        )
    )
)

;; Calendar Windows ;;
(defwindow calendar
    :monitor 1
    :geometry (geometry :x "1630px"
                        :y "10px"
                        :width "270px"
                        :height "60px")
(cal))
