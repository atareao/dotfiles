#!/usr/bin/env bash
# -*- coding: utf-8 -*-

# Copyright (c) 2021 Lorenzo Carbonell <a.k.a. atareao>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

function publish(){
    repository="$1"
    action="$2"
    data="$3"
    result=""
    ok="$4"
    while read line;do
        if [[ -z $result ]]; then
            result=$(echo "${line}" | tr '"' "'")
        else
            result="${result}|${line}"
        fi
    done< <(echo $data)
    echo $output
    curl -X 'POST' \
        "https://openobserve.territoriolinux.es/api/default/archi_backup/_json" \
        -H "accept: application/json" \
        -H "Authorization: Basic {{ env.ZINCOBSERVE_TOKEN }}" \
        -H "Content-Type: application/json" \
        -d "[
                {
                    \"repository\": \"${repository}\",
                    \"action\": \"${action}\",
                    \"ok\": \"${ok}\",
                    \"result\": \"${result}\"
                }
            ]"
}

PROFILES=("local" "minio_local" "minio_server" "rustfs_server")

for PROFILE in "${PROFILES[@]}"
do
    echo "=== Start backup at $PROFILE ==="
    create_output=$(rustic -P "$PROFILE" backup)
    ok=$?
    publish "${PROFILE}" "create" "${create_output}" "${ok}"
    echo "$create_output"
    echo "=== End backup at $PROFILE ==="
done
for PROFILE in "${PROFILES[@]}"
do
    echo "=== Start check $PROFILE ==="
    check_output=$(rustic -P "$PROFILE" check)
    ok=$?
    publish "${PROFILE}" "check" "${check_output}" "${ok}"
    echo "$check_output"
    echo "=== End check $PROFILE ==="
done
for PROFILE in "${PROFILES[@]}"
do
    echo "=== Start forget $PROFILE ==="
    forget_output=$(rustic -P "$PROFILE" forget)
    ok=$?
    publish "${PROFILE}" "prune" "${forget_output}" "${ok}"
    echo "$forget_output"
    echo "=== End forget $PROFILE ==="
done
for PROFILE in "${PROFILES[@]}"
do
    echo "=== Start list $PROFILE ==="
    snapshots_output=$(rustic -P "$PROFILE" snapshots)
    ok=$?
    publish "${PROFILE}" "snapshots" "${snapshots_output}" "${ok}"
    echo "=== End prune $PROFILE ==="
done
